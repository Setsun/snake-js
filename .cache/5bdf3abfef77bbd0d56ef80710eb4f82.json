{"dependencies":[{"name":"/Users/seanjeluo/Code/sq-snake-js/.babelrc","includedInParent":true,"mtime":1526248092235},{"name":"/Users/seanjeluo/Code/sq-snake-js/package.json","includedInParent":true,"mtime":1526248082062},{"name":"../utils/constants"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _constants = require('../utils/constants');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Snake = function () {\n  function Snake(startPosition) {\n    _classCallCheck(this, Snake);\n\n    this.body = [startPosition];\n    this.currentAction = _constants.ActionTypes.UP;\n  }\n\n  _createClass(Snake, [{\n    key: 'addBodyCell',\n    value: function addBodyCell() {\n      this.body.push(this.lastTail);\n    }\n  }, {\n    key: 'setCurrentAction',\n    value: function setCurrentAction(action) {\n      this.currentAction = action;\n    }\n  }, {\n    key: 'move',\n    value: function move() {\n      var _body = _slicedToArray(this.body, 1),\n          head = _body[0];\n\n      var nextHead = _extends({}, head);\n\n      switch (this.currentAction) {\n        case _constants.ActionTypes.LEFT:\n          {\n            nextHead.y -= 1;\n            break;\n          }\n        case _constants.ActionTypes.RIGHT:\n          {\n            nextHead.y += 1;\n            break;\n          }\n        case _constants.ActionTypes.UP:\n          {\n            nextHead.x -= 1;\n            break;\n          }\n        case _constants.ActionTypes.DOWN:\n          {\n            nextHead.x += 1;\n            break;\n          }\n      }\n\n      this.body.unshift(nextHead);\n      this.lastTail = this.body.pop();\n    }\n  }]);\n\n  return Snake;\n}();\n\nexports.default = Snake;","map":{"mappings":[{"generated":{"line":13,"column":0},"source":"Snake/index.js","original":{"line":3,"column":0}},{"name":"Snake","generated":{"line":17,"column":4},"source":"Snake/index.js","original":{"line":6,"column":6}},{"generated":{"line":18,"column":0},"source":"Snake/index.js","original":{"line":11,"column":2}},{"name":"startPosition","generated":{"line":18,"column":17},"source":"Snake/index.js","original":{"line":11,"column":14}},{"generated":{"line":18,"column":30},"source":"Snake/index.js","original":{"line":11,"column":2}},{"generated":{"line":18,"column":32},"source":"Snake/index.js","original":{"line":11,"column":39}},{"generated":{"line":19,"column":0},"source":"Snake/index.js","original":{"line":11,"column":39}},{"generated":{"line":21,"column":0},"source":"Snake/index.js","original":{"line":12,"column":4}},{"name":"body","generated":{"line":21,"column":9},"source":"Snake/index.js","original":{"line":12,"column":9}},{"generated":{"line":21,"column":13},"source":"Snake/index.js","original":{"line":12,"column":4}},{"generated":{"line":21,"column":16},"source":"Snake/index.js","original":{"line":12,"column":16}},{"name":"startPosition","generated":{"line":21,"column":17},"source":"Snake/index.js","original":{"line":12,"column":17}},{"generated":{"line":21,"column":30},"source":"Snake/index.js","original":{"line":12,"column":16}},{"generated":{"line":21,"column":31},"source":"Snake/index.js","original":{"line":12,"column":4}},{"generated":{"line":22,"column":0},"source":"Snake/index.js","original":{"line":13,"column":4}},{"name":"currentAction","generated":{"line":22,"column":9},"source":"Snake/index.js","original":{"line":13,"column":9}},{"generated":{"line":22,"column":22},"source":"Snake/index.js","original":{"line":13,"column":4}},{"name":"ActionTypes","generated":{"line":22,"column":25},"source":"Snake/index.js","original":{"line":13,"column":25}},{"name":"UP","generated":{"line":22,"column":48},"source":"Snake/index.js","original":{"line":13,"column":37}},{"generated":{"line":22,"column":50},"source":"Snake/index.js","original":{"line":13,"column":4}},{"generated":{"line":23,"column":0},"source":"Snake/index.js","original":{"line":14,"column":3}},{"generated":{"line":27,"column":34},"source":"Snake/index.js","original":{"line":16,"column":16}},{"generated":{"line":28,"column":0},"source":"Snake/index.js","original":{"line":17,"column":4}},{"name":"body","generated":{"line":28,"column":11},"source":"Snake/index.js","original":{"line":17,"column":9}},{"generated":{"line":28,"column":15},"source":"Snake/index.js","original":{"line":17,"column":4}},{"name":"push","generated":{"line":28,"column":16},"source":"Snake/index.js","original":{"line":17,"column":14}},{"generated":{"line":28,"column":20},"source":"Snake/index.js","original":{"line":17,"column":4}},{"generated":{"line":28,"column":21},"source":"Snake/index.js","original":{"line":17,"column":19}},{"name":"lastTail","generated":{"line":28,"column":26},"source":"Snake/index.js","original":{"line":17,"column":24}},{"generated":{"line":28,"column":34},"source":"Snake/index.js","original":{"line":17,"column":4}},{"generated":{"line":29,"column":0},"source":"Snake/index.js","original":{"line":18,"column":3}},{"name":"action","generated":{"line":32,"column":37},"source":"Snake/index.js","original":{"line":20,"column":19}},{"generated":{"line":32,"column":45},"source":"Snake/index.js","original":{"line":20,"column":39}},{"generated":{"line":33,"column":0},"source":"Snake/index.js","original":{"line":21,"column":4}},{"name":"currentAction","generated":{"line":33,"column":11},"source":"Snake/index.js","original":{"line":21,"column":9}},{"generated":{"line":33,"column":24},"source":"Snake/index.js","original":{"line":21,"column":4}},{"name":"action","generated":{"line":33,"column":27},"source":"Snake/index.js","original":{"line":21,"column":25}},{"generated":{"line":33,"column":33},"source":"Snake/index.js","original":{"line":21,"column":4}},{"generated":{"line":34,"column":0},"source":"Snake/index.js","original":{"line":22,"column":3}},{"generated":{"line":37,"column":27},"source":"Snake/index.js","original":{"line":24,"column":9}},{"generated":{"line":38,"column":0},"source":"Snake/index.js","original":{"line":24,"column":9}},{"generated":{"line":38,"column":33},"source":"Snake/index.js","original":{"line":25,"column":21}},{"name":"body","generated":{"line":38,"column":38},"source":"Snake/index.js","original":{"line":25,"column":26}},{"generated":{"line":38,"column":42},"source":"Snake/index.js","original":{"line":24,"column":9}},{"generated":{"line":39,"column":0},"source":"Snake/index.js","original":{"line":24,"column":9}},{"name":"head","generated":{"line":39,"column":10},"source":"Snake/index.js","original":{"line":25,"column":12}},{"generated":{"line":39,"column":14},"source":"Snake/index.js","original":{"line":24,"column":9}},{"generated":{"line":41,"column":0},"source":"Snake/index.js","original":{"line":26,"column":4}},{"name":"nextHead","generated":{"line":41,"column":10},"source":"Snake/index.js","original":{"line":26,"column":8}},{"name":"head","generated":{"line":41,"column":34},"source":"Snake/index.js","original":{"line":26,"column":24}},{"generated":{"line":41,"column":38},"source":"Snake/index.js","original":{"line":26,"column":8}},{"generated":{"line":41,"column":39},"source":"Snake/index.js","original":{"line":26,"column":4}},{"generated":{"line":43,"column":0},"source":"Snake/index.js","original":{"line":28,"column":4}},{"generated":{"line":43,"column":14},"source":"Snake/index.js","original":{"line":28,"column":12}},{"name":"currentAction","generated":{"line":43,"column":19},"source":"Snake/index.js","original":{"line":28,"column":17}},{"generated":{"line":43,"column":32},"source":"Snake/index.js","original":{"line":28,"column":4}},{"generated":{"line":44,"column":0},"source":"Snake/index.js","original":{"line":29,"column":6}},{"name":"ActionTypes","generated":{"line":44,"column":13},"source":"Snake/index.js","original":{"line":29,"column":11}},{"name":"LEFT","generated":{"line":44,"column":36},"source":"Snake/index.js","original":{"line":29,"column":23}},{"generated":{"line":44,"column":40},"source":"Snake/index.js","original":{"line":29,"column":6}},{"generated":{"line":45,"column":0},"source":"Snake/index.js","original":{"line":29,"column":29}},{"name":"nextHead","generated":{"line":46,"column":0},"source":"Snake/index.js","original":{"line":30,"column":8}},{"name":"y","generated":{"line":46,"column":21},"source":"Snake/index.js","original":{"line":30,"column":17}},{"generated":{"line":46,"column":22},"source":"Snake/index.js","original":{"line":30,"column":8}},{"generated":{"line":46,"column":26},"source":"Snake/index.js","original":{"line":30,"column":22}},{"generated":{"line":46,"column":27},"source":"Snake/index.js","original":{"line":30,"column":8}},{"generated":{"line":47,"column":0},"source":"Snake/index.js","original":{"line":31,"column":8}},{"generated":{"line":48,"column":0},"source":"Snake/index.js","original":{"line":32,"column":7}},{"generated":{"line":49,"column":0},"source":"Snake/index.js","original":{"line":33,"column":6}},{"name":"ActionTypes","generated":{"line":49,"column":13},"source":"Snake/index.js","original":{"line":33,"column":11}},{"name":"RIGHT","generated":{"line":49,"column":36},"source":"Snake/index.js","original":{"line":33,"column":23}},{"generated":{"line":49,"column":41},"source":"Snake/index.js","original":{"line":33,"column":6}},{"generated":{"line":50,"column":0},"source":"Snake/index.js","original":{"line":33,"column":30}},{"name":"nextHead","generated":{"line":51,"column":0},"source":"Snake/index.js","original":{"line":34,"column":8}},{"name":"y","generated":{"line":51,"column":21},"source":"Snake/index.js","original":{"line":34,"column":17}},{"generated":{"line":51,"column":22},"source":"Snake/index.js","original":{"line":34,"column":8}},{"generated":{"line":51,"column":26},"source":"Snake/index.js","original":{"line":34,"column":22}},{"generated":{"line":51,"column":27},"source":"Snake/index.js","original":{"line":34,"column":8}},{"generated":{"line":52,"column":0},"source":"Snake/index.js","original":{"line":35,"column":8}},{"generated":{"line":53,"column":0},"source":"Snake/index.js","original":{"line":36,"column":7}},{"generated":{"line":54,"column":0},"source":"Snake/index.js","original":{"line":37,"column":6}},{"name":"ActionTypes","generated":{"line":54,"column":13},"source":"Snake/index.js","original":{"line":37,"column":11}},{"name":"UP","generated":{"line":54,"column":36},"source":"Snake/index.js","original":{"line":37,"column":23}},{"generated":{"line":54,"column":38},"source":"Snake/index.js","original":{"line":37,"column":6}},{"generated":{"line":55,"column":0},"source":"Snake/index.js","original":{"line":37,"column":27}},{"name":"nextHead","generated":{"line":56,"column":0},"source":"Snake/index.js","original":{"line":38,"column":8}},{"name":"x","generated":{"line":56,"column":21},"source":"Snake/index.js","original":{"line":38,"column":17}},{"generated":{"line":56,"column":22},"source":"Snake/index.js","original":{"line":38,"column":8}},{"generated":{"line":56,"column":26},"source":"Snake/index.js","original":{"line":38,"column":22}},{"generated":{"line":56,"column":27},"source":"Snake/index.js","original":{"line":38,"column":8}},{"generated":{"line":57,"column":0},"source":"Snake/index.js","original":{"line":39,"column":8}},{"generated":{"line":58,"column":0},"source":"Snake/index.js","original":{"line":40,"column":7}},{"generated":{"line":59,"column":0},"source":"Snake/index.js","original":{"line":41,"column":6}},{"name":"ActionTypes","generated":{"line":59,"column":13},"source":"Snake/index.js","original":{"line":41,"column":11}},{"name":"DOWN","generated":{"line":59,"column":36},"source":"Snake/index.js","original":{"line":41,"column":23}},{"generated":{"line":59,"column":40},"source":"Snake/index.js","original":{"line":41,"column":6}},{"generated":{"line":60,"column":0},"source":"Snake/index.js","original":{"line":41,"column":29}},{"name":"nextHead","generated":{"line":61,"column":0},"source":"Snake/index.js","original":{"line":42,"column":8}},{"name":"x","generated":{"line":61,"column":21},"source":"Snake/index.js","original":{"line":42,"column":17}},{"generated":{"line":61,"column":22},"source":"Snake/index.js","original":{"line":42,"column":8}},{"generated":{"line":61,"column":26},"source":"Snake/index.js","original":{"line":42,"column":22}},{"generated":{"line":61,"column":27},"source":"Snake/index.js","original":{"line":42,"column":8}},{"generated":{"line":62,"column":0},"source":"Snake/index.js","original":{"line":43,"column":8}},{"generated":{"line":63,"column":0},"source":"Snake/index.js","original":{"line":44,"column":7}},{"generated":{"line":64,"column":0},"source":"Snake/index.js","original":{"line":28,"column":4}},{"generated":{"line":66,"column":0},"source":"Snake/index.js","original":{"line":47,"column":4}},{"name":"body","generated":{"line":66,"column":11},"source":"Snake/index.js","original":{"line":47,"column":9}},{"generated":{"line":66,"column":15},"source":"Snake/index.js","original":{"line":47,"column":4}},{"name":"unshift","generated":{"line":66,"column":16},"source":"Snake/index.js","original":{"line":47,"column":14}},{"generated":{"line":66,"column":23},"source":"Snake/index.js","original":{"line":47,"column":4}},{"name":"nextHead","generated":{"line":66,"column":24},"source":"Snake/index.js","original":{"line":47,"column":22}},{"generated":{"line":66,"column":32},"source":"Snake/index.js","original":{"line":47,"column":4}},{"generated":{"line":67,"column":0},"source":"Snake/index.js","original":{"line":48,"column":4}},{"name":"lastTail","generated":{"line":67,"column":11},"source":"Snake/index.js","original":{"line":48,"column":9}},{"generated":{"line":67,"column":19},"source":"Snake/index.js","original":{"line":48,"column":4}},{"generated":{"line":67,"column":22},"source":"Snake/index.js","original":{"line":48,"column":20}},{"name":"body","generated":{"line":67,"column":27},"source":"Snake/index.js","original":{"line":48,"column":25}},{"generated":{"line":67,"column":31},"source":"Snake/index.js","original":{"line":48,"column":20}},{"name":"pop","generated":{"line":67,"column":32},"source":"Snake/index.js","original":{"line":48,"column":30}},{"generated":{"line":67,"column":35},"source":"Snake/index.js","original":{"line":48,"column":20}},{"generated":{"line":67,"column":37},"source":"Snake/index.js","original":{"line":48,"column":4}},{"generated":{"line":68,"column":0},"source":"Snake/index.js","original":{"line":49,"column":3}},{"name":"Snake","generated":{"line":74,"column":18},"source":"Snake/index.js","original":{"line":52,"column":15}}],"sources":{"Snake/index.js":"// @flow\n\nimport { ActionTypes } from '../utils/constants';\nimport type { ActionType, Position } from '../types';\n\nclass Snake {\n  body: Array<Position>;\n  lastTail: Position;\n  currentAction: ActionType;\n\n  constructor(startPosition: Position) {\n    this.body = [startPosition];\n    this.currentAction = ActionTypes.UP;\n  }\n\n  addBodyCell() {\n    this.body.push(this.lastTail);\n  }\n\n  setCurrentAction(action: ActionType) {\n    this.currentAction = action;\n  }\n\n  move() {\n    const [ head ] = this.body;\n    let nextHead = { ...head };\n\n    switch (this.currentAction) {\n      case ActionTypes.LEFT: {\n        nextHead.y -= 1;\n        break;\n      }\n      case ActionTypes.RIGHT: {\n        nextHead.y += 1;\n        break;\n      }\n      case ActionTypes.UP: {\n        nextHead.x -= 1;\n        break;\n      }\n      case ActionTypes.DOWN: {\n        nextHead.x += 1;\n        break;\n      }\n    }\n\n    this.body.unshift(nextHead);\n    this.lastTail = this.body.pop();\n  }\n}\n\nexport default Snake;\n"},"lineCount":null}},"hash":"beeb7aeb73b9ee80ed2c1c049f08fc9a","cacheData":{"env":{}}}