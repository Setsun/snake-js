{"dependencies":[{"name":"/Users/seanjeluo/Code/sq-snake-js/.babelrc","includedInParent":true,"mtime":1526240973949},{"name":"/Users/seanjeluo/Code/sq-snake-js/package.json","includedInParent":true,"mtime":1526243183215},{"name":"../utils/constants"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _constants = require('../utils/constants');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Snake = function () {\n  function Snake(startPosition) {\n    _classCallCheck(this, Snake);\n\n    this.body = [startPosition];\n  }\n\n  _createClass(Snake, [{\n    key: 'addBodyCell',\n    value: function addBodyCell() {}\n  }, {\n    key: 'move',\n    value: function move(type) {\n      var _body = _slicedToArray(this.body, 1),\n          head = _body[0];\n\n      var nextHead = _extends({}, head);\n\n      switch (type) {\n        case _constants.ActionTypes.LEFT:\n          {\n            nextHead.x -= 1;\n            break;\n          }\n        case _constants.ActionTypes.RIGHT:\n          {\n            nextHead.x += 1;\n            break;\n          }\n        case _constants.ActionTypes.UP:\n          {\n            nextHead.y -= 1;\n            break;\n          }\n        case _constants.ActionTypes.DOWN:\n          {\n            nextHead.y += 1;\n            break;\n          }\n      }\n\n      this.body[0] = nextHead;\n    }\n  }]);\n\n  return Snake;\n}();\n\nexports.default = Snake;","map":{"mappings":[{"generated":{"line":13,"column":0},"source":"Snake/index.js","original":{"line":3,"column":0}},{"name":"Snake","generated":{"line":17,"column":4},"source":"Snake/index.js","original":{"line":5,"column":6}},{"generated":{"line":18,"column":0},"source":"Snake/index.js","original":{"line":6,"column":2}},{"name":"startPosition","generated":{"line":18,"column":17},"source":"Snake/index.js","original":{"line":6,"column":14}},{"generated":{"line":18,"column":30},"source":"Snake/index.js","original":{"line":6,"column":2}},{"generated":{"line":18,"column":32},"source":"Snake/index.js","original":{"line":6,"column":29}},{"generated":{"line":19,"column":0},"source":"Snake/index.js","original":{"line":6,"column":29}},{"generated":{"line":21,"column":0},"source":"Snake/index.js","original":{"line":7,"column":4}},{"name":"body","generated":{"line":21,"column":9},"source":"Snake/index.js","original":{"line":7,"column":9}},{"generated":{"line":21,"column":13},"source":"Snake/index.js","original":{"line":7,"column":4}},{"generated":{"line":21,"column":16},"source":"Snake/index.js","original":{"line":7,"column":16}},{"name":"startPosition","generated":{"line":21,"column":17},"source":"Snake/index.js","original":{"line":7,"column":17}},{"generated":{"line":21,"column":30},"source":"Snake/index.js","original":{"line":7,"column":16}},{"generated":{"line":21,"column":31},"source":"Snake/index.js","original":{"line":7,"column":4}},{"generated":{"line":22,"column":0},"source":"Snake/index.js","original":{"line":8,"column":3}},{"generated":{"line":26,"column":34},"source":"Snake/index.js","original":{"line":10,"column":16}},{"generated":{"line":26,"column":35},"source":"Snake/index.js","original":{"line":11,"column":3}},{"name":"type","generated":{"line":29,"column":25},"source":"Snake/index.js","original":{"line":13,"column":7}},{"generated":{"line":29,"column":31},"source":"Snake/index.js","original":{"line":13,"column":13}},{"generated":{"line":30,"column":0},"source":"Snake/index.js","original":{"line":13,"column":13}},{"generated":{"line":30,"column":33},"source":"Snake/index.js","original":{"line":14,"column":21}},{"name":"body","generated":{"line":30,"column":38},"source":"Snake/index.js","original":{"line":14,"column":26}},{"generated":{"line":30,"column":42},"source":"Snake/index.js","original":{"line":13,"column":13}},{"generated":{"line":31,"column":0},"source":"Snake/index.js","original":{"line":13,"column":13}},{"name":"head","generated":{"line":31,"column":10},"source":"Snake/index.js","original":{"line":14,"column":12}},{"generated":{"line":31,"column":14},"source":"Snake/index.js","original":{"line":13,"column":13}},{"generated":{"line":33,"column":0},"source":"Snake/index.js","original":{"line":15,"column":4}},{"name":"nextHead","generated":{"line":33,"column":10},"source":"Snake/index.js","original":{"line":15,"column":8}},{"name":"head","generated":{"line":33,"column":34},"source":"Snake/index.js","original":{"line":15,"column":24}},{"generated":{"line":33,"column":38},"source":"Snake/index.js","original":{"line":15,"column":8}},{"generated":{"line":33,"column":39},"source":"Snake/index.js","original":{"line":15,"column":4}},{"generated":{"line":35,"column":0},"source":"Snake/index.js","original":{"line":17,"column":4}},{"name":"type","generated":{"line":35,"column":14},"source":"Snake/index.js","original":{"line":17,"column":12}},{"generated":{"line":35,"column":18},"source":"Snake/index.js","original":{"line":17,"column":4}},{"generated":{"line":36,"column":0},"source":"Snake/index.js","original":{"line":18,"column":6}},{"name":"ActionTypes","generated":{"line":36,"column":13},"source":"Snake/index.js","original":{"line":18,"column":11}},{"name":"LEFT","generated":{"line":36,"column":36},"source":"Snake/index.js","original":{"line":18,"column":23}},{"generated":{"line":36,"column":40},"source":"Snake/index.js","original":{"line":18,"column":6}},{"generated":{"line":37,"column":0},"source":"Snake/index.js","original":{"line":18,"column":29}},{"name":"nextHead","generated":{"line":38,"column":0},"source":"Snake/index.js","original":{"line":19,"column":8}},{"name":"x","generated":{"line":38,"column":21},"source":"Snake/index.js","original":{"line":19,"column":17}},{"generated":{"line":38,"column":22},"source":"Snake/index.js","original":{"line":19,"column":8}},{"generated":{"line":38,"column":26},"source":"Snake/index.js","original":{"line":19,"column":22}},{"generated":{"line":38,"column":27},"source":"Snake/index.js","original":{"line":19,"column":8}},{"generated":{"line":39,"column":0},"source":"Snake/index.js","original":{"line":20,"column":8}},{"generated":{"line":40,"column":0},"source":"Snake/index.js","original":{"line":21,"column":7}},{"generated":{"line":41,"column":0},"source":"Snake/index.js","original":{"line":22,"column":6}},{"name":"ActionTypes","generated":{"line":41,"column":13},"source":"Snake/index.js","original":{"line":22,"column":11}},{"name":"RIGHT","generated":{"line":41,"column":36},"source":"Snake/index.js","original":{"line":22,"column":23}},{"generated":{"line":41,"column":41},"source":"Snake/index.js","original":{"line":22,"column":6}},{"generated":{"line":42,"column":0},"source":"Snake/index.js","original":{"line":22,"column":30}},{"name":"nextHead","generated":{"line":43,"column":0},"source":"Snake/index.js","original":{"line":23,"column":8}},{"name":"x","generated":{"line":43,"column":21},"source":"Snake/index.js","original":{"line":23,"column":17}},{"generated":{"line":43,"column":22},"source":"Snake/index.js","original":{"line":23,"column":8}},{"generated":{"line":43,"column":26},"source":"Snake/index.js","original":{"line":23,"column":22}},{"generated":{"line":43,"column":27},"source":"Snake/index.js","original":{"line":23,"column":8}},{"generated":{"line":44,"column":0},"source":"Snake/index.js","original":{"line":24,"column":8}},{"generated":{"line":45,"column":0},"source":"Snake/index.js","original":{"line":25,"column":7}},{"generated":{"line":46,"column":0},"source":"Snake/index.js","original":{"line":26,"column":6}},{"name":"ActionTypes","generated":{"line":46,"column":13},"source":"Snake/index.js","original":{"line":26,"column":11}},{"name":"UP","generated":{"line":46,"column":36},"source":"Snake/index.js","original":{"line":26,"column":23}},{"generated":{"line":46,"column":38},"source":"Snake/index.js","original":{"line":26,"column":6}},{"generated":{"line":47,"column":0},"source":"Snake/index.js","original":{"line":26,"column":27}},{"name":"nextHead","generated":{"line":48,"column":0},"source":"Snake/index.js","original":{"line":27,"column":8}},{"name":"y","generated":{"line":48,"column":21},"source":"Snake/index.js","original":{"line":27,"column":17}},{"generated":{"line":48,"column":22},"source":"Snake/index.js","original":{"line":27,"column":8}},{"generated":{"line":48,"column":26},"source":"Snake/index.js","original":{"line":27,"column":22}},{"generated":{"line":48,"column":27},"source":"Snake/index.js","original":{"line":27,"column":8}},{"generated":{"line":49,"column":0},"source":"Snake/index.js","original":{"line":28,"column":8}},{"generated":{"line":50,"column":0},"source":"Snake/index.js","original":{"line":29,"column":7}},{"generated":{"line":51,"column":0},"source":"Snake/index.js","original":{"line":30,"column":6}},{"name":"ActionTypes","generated":{"line":51,"column":13},"source":"Snake/index.js","original":{"line":30,"column":11}},{"name":"DOWN","generated":{"line":51,"column":36},"source":"Snake/index.js","original":{"line":30,"column":23}},{"generated":{"line":51,"column":40},"source":"Snake/index.js","original":{"line":30,"column":6}},{"generated":{"line":52,"column":0},"source":"Snake/index.js","original":{"line":30,"column":29}},{"name":"nextHead","generated":{"line":53,"column":0},"source":"Snake/index.js","original":{"line":31,"column":8}},{"name":"y","generated":{"line":53,"column":21},"source":"Snake/index.js","original":{"line":31,"column":17}},{"generated":{"line":53,"column":22},"source":"Snake/index.js","original":{"line":31,"column":8}},{"generated":{"line":53,"column":26},"source":"Snake/index.js","original":{"line":31,"column":22}},{"generated":{"line":53,"column":27},"source":"Snake/index.js","original":{"line":31,"column":8}},{"generated":{"line":54,"column":0},"source":"Snake/index.js","original":{"line":32,"column":8}},{"generated":{"line":55,"column":0},"source":"Snake/index.js","original":{"line":33,"column":7}},{"generated":{"line":56,"column":0},"source":"Snake/index.js","original":{"line":17,"column":4}},{"generated":{"line":58,"column":0},"source":"Snake/index.js","original":{"line":36,"column":4}},{"name":"body","generated":{"line":58,"column":11},"source":"Snake/index.js","original":{"line":36,"column":9}},{"generated":{"line":58,"column":15},"source":"Snake/index.js","original":{"line":36,"column":4}},{"generated":{"line":58,"column":16},"source":"Snake/index.js","original":{"line":36,"column":14}},{"generated":{"line":58,"column":17},"source":"Snake/index.js","original":{"line":36,"column":4}},{"name":"nextHead","generated":{"line":58,"column":21},"source":"Snake/index.js","original":{"line":36,"column":19}},{"generated":{"line":58,"column":29},"source":"Snake/index.js","original":{"line":36,"column":4}},{"generated":{"line":59,"column":0},"source":"Snake/index.js","original":{"line":37,"column":3}},{"name":"Snake","generated":{"line":65,"column":18},"source":"Snake/index.js","original":{"line":40,"column":15}}],"sources":{"Snake/index.js":"// @flow\n\nimport { ActionTypes } from '../utils/constants';\n\nclass Snake {\n  constructor(startPosition) {\n    this.body = [startPosition];\n  }\n\n  addBodyCell() {\n  }\n\n  move(type) {\n    const [ head ] = this.body;\n    let nextHead = { ...head };\n\n    switch (type) {\n      case ActionTypes.LEFT: {\n        nextHead.x -= 1;\n        break;\n      }\n      case ActionTypes.RIGHT: {\n        nextHead.x += 1;\n        break;\n      }\n      case ActionTypes.UP: {\n        nextHead.y -= 1;\n        break;\n      }\n      case ActionTypes.DOWN: {\n        nextHead.y += 1;\n        break;\n      }\n    }\n\n    this.body[0] = nextHead;\n  }\n}\n\nexport default Snake;\n"},"lineCount":null}},"hash":"2b9162d2e2b20cc74ad00e0d1ec0accb","cacheData":{"env":{}}}